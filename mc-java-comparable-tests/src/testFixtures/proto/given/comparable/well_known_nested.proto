/*
* Copyright 2024, TeamDev. All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* https://www.apache.org/licenses/LICENSE-2.0
*
* Redistribution and use in source and/or binary forms, with or without
* modification, must retain the above copyright notice and the following
* disclaimer.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

syntax = "proto3";

package given.comparable;

import "spine/options.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.tools.mc.java.comparable.given";
option java_multiple_files = true;

// This file contains messages with some nested well-known Protobuf types,
// which are not required to have `compare_by` option to participate in comparison.

message NestedWellKnown {
    google.protobuf.Timestamp timestamp = 1;
    google.protobuf.Duration duration = 2;

    google.protobuf.BoolValue bool = 3;
    google.protobuf.DoubleValue double = 4;
    google.protobuf.FloatValue float = 5;
    google.protobuf.Int32Value int32 = 6;
    google.protobuf.Int64Value int64 = 7;
    google.protobuf.UInt32Value uint32 = 8;
    google.protobuf.UInt64Value uint64 = 9;
    google.protobuf.StringValue string = 10;
}

message NestedTimestampAndDuration {
    option (compare_by) = {
        field: "nested.timestamp"
        field: "nested.duration"
    };
    NestedWellKnown nested = 1;
}

message NestedValues {
    option (compare_by) = {
        field: "nested.bool"
        field: "nested.double"
        field: "nested.float"
        field: "nested.int32"
        field: "nested.int64"
        field: "nested.uint32"
        field: "nested.uint64"
        field: "nested.string"
    };
    NestedWellKnown nested = 1;
}
