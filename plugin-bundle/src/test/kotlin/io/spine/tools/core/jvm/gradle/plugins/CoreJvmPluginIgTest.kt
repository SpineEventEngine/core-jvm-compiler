/*
 * Copyright 2025, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package io.spine.tools.core.jvm.gradle.plugins

import io.kotest.matchers.shouldBe
import io.spine.tools.gradle.task.TaskName
import io.spine.tools.gradle.testing.GradleProject
import io.spine.tools.gradle.testing.get
import java.io.File
import org.gradle.testkit.runner.TaskOutcome
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.io.TempDir

@DisplayName("`CoreJvmPlugin` published as a fat JAR should")
class CoreJvmPluginIgTest {
    
    @Test
    fun `work when applied to a single-module project via classpath`(@TempDir projectDir: File) {
        val version = CoreJvmCompiler.artifact.version
        val baseUrl = "https://europe-maven.pkg.dev/spine-event-engine"
        val buildFile = """
            |/* Auto-generated by test */
            |buildscript {
            |    repositories {
            |        mavenLocal()
            |        mavenCentral()
            |        maven { url = uri("$baseUrl/releases") }
            |        maven { url = uri("$baseUrl/snapshots") }
            |    }
            |    dependencies {
            |        classpath("io.spine.tools:core-jvm-plugins:$version:all")
            |    }
            |}
            |
            |plugins {
            |    java
            |}
            |
            |apply(plugin = "io.spine.core-jvm")
            |
            |tasks.register("verify") {
            |    doLast {
            |        println("`CoreJvmPlugin` applied via `classpath` successfully.")
            |    }
            |}
        """.trimMargin()
        val settingsFile = """
            |rootProject.name = "core-jvm-plugin-ig-test"
        """.trimMargin()
        val project = GradleProject.setupAt(projectDir)
            .copyBuildSrc()
            .withSharedTestKitDirectory()
            .addFile("settings.gradle.kts", settingsFile.lines())
            .addFile("build.gradle.kts", buildFile.lines())
            .create()
        val verify = TaskName.of("verify")
        val result = project.executeTask(verify)
        result[verify] shouldBe TaskOutcome.SUCCESS
    }
}
