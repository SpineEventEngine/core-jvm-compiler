/*
 * Copyright 2024, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine.core.jvm.annotation;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.tools.core.jvm.annotation";
option java_outer_classname = "SettingsProto";
option java_multiple_files = true;

// Settings passed to components of `ApiAnnotationsPlugin` ProtoData plugin.
//
// This message is composed by `WriteProtoDataSettings` task from properties exposed
// by McJava project extension.
//
message Settings {

    // Java annotation types to be used for setting API levels.
    AnnotationTypes annotation_types = 1 [(required) = true];

    // The pattern for the names of the classes that to be annotated as internal.
    repeated string internalClassPattern = 2;

    // The pattern for the method names to be annotated as internal.
    repeated string internalMethodName = 3;

    // Provides class names of Java annotation types that correspond to certain API level.
    message AnnotationTypes {

        // The name of the type for experimental API level.
        //
        // The default value is `io.spine.annotation.Experimental`.
        //
        string experimental = 1 [(required) = true];

        // The name of the type for Beta API level.
        //
        // The default value is `io.spine.annotation.Beta`.
        //
        string beta = 2 [(required) = true];

        // The name of the type for Service Provider Interface (SPI) API level.
        //
        // The default value is `io.spine.annotation.SPI`.
        //
        string spi = 3 [(required) = true];

        // The name of the type for internal API level.
        //
        // The default value is `io.spine.annotation.Internal`.
        //
        string internal = 4 [(required) = true];
    }
}
